resCav2$pvalue("hsa-miR-421-3p")
resCav2$pvalue[8]
match("hsa-miR-574-3p", rownames(resCav1))
resCav2$pvalue[576]
rownames(resCav2$pvalue[576])
rownames(resCav2[576])
resCav2[576]
rawdata[576]
rownames(rawdata[576])
rownames(rawdata)
rownames(rawdata)[578]
rownames(rawdata)[576]
resCav2$pvalue[576]
match("hsa-miR-574-5p", rownames(resCav1))
resCav2$pvalue[464]
resCav2$pvalue("hsa-miR-421-3p")
"hsa-miR-363-3p"%in%Downregshared
"hsa-miR-363-5p"%in%Downregshared
library(lumi)
library(edgeR)
rm(List=ls())
rm(list=ls())
rawdata<- read.csv("miRNA_raw_counts_CORRECT_NAMES.csv", header=TRUE)
getwd()
setwd("C:/Users/hrobinson/Documents/GITSTUFF/Data/EXO/EDGER")
rawdata<- read.csv("miRNA_raw_counts_CORRECT_NAMES.csv", header=TRUE)
View(rawdata)
rawdata[1, 16]
rawdata[1, 12]
rawdata[1, 17]
rawdata[1, 33]
rawdata[1, 30]
y<- rawdata[, 17:30]
View(y)
y<- rawdata[, 1]
y<- c(y, rawdata[, 17:30])
y<- rawdata[, 17:30]
y<- c(y, rawdata[, 1])
y<- rawdata[, 17:30]
y<- c(y, as.dataframe(rawdata[, 1]))
y<- c(y, as.data.frame(rawdata[, 1]))
y<- as.data.frame(y)
View(y)
y<- rawdata[, 17:30]
rownames(y)<- rawdata[, 1]
View(y)
y<- rawdata[, 17:31]
rownames(y)<- rawdata[, 1]
View(y)
write.csv(y, "HEKexoRAW.csv")
y<- rawdata[, 44:55]
View(y)
rownames(y)<- rawdata[, 1]
write.csv(y, "PC3exoRAW.csv")
rawdata <- read.csv("HEKexoRAW.csv")
View(rawdata)
rawdata <- read.csv("HEKexoRAW.csv", header= TRUE)
y <- DGEList(counts=rawdata[,2:16], genes=rawdata[,1])
keep <- rowSums(cpm(y)>10) >=2
y <- y[keep,]
y$samples$lib.size <- colSums(y$counts)
y <- calcNormFactors(y)
#make QC plots
pdf(file="DENDRPC3exo.pdf", paper="a4r")
d <-cpm(y, normalized.lib.sizes=TRUE)
d<-t(d)
dist<-dist(d)
hc<-hclust(dist)
plot(hc)
dev.off()
pdf(file="DENDRhekExo.pdf", paper="a4r")
d <-cpm(y, normalized.lib.sizes=TRUE)
d<-t(d)
dist<-dist(d)
hc<-hclust(dist)
plot(hc)
dev.off()
cpm<- cpm(y, normalized.lib.sizes=TRUE)
rownames(cpm)<-y$genes[,1]
write.table(cpm, "cpm_miRNA_HEKexo_subset.txt", sep="\t")
tiff(file= "EXOhekMDS.tiff, width=480, height=480")
plotMDS(y, method="bcv")
dev.off()
cpm<-replace(cpm, cpm==0, 0.01)
min<-ExpressionSet(assayData=cpm)
pairs(min, smoothScatter=TRUE)
x<-pairs(min, smoothScatter=TRUE)
is.list(min)
cpm<-replace(cpm, cpm==0, 0.01)
min<-ExpressionSet(assayData=cpm)
pairs(min, smoothScatter=TRUE)
cpm<-replace(cpm, cpm==0, 0.01)
min<-ExpressionSet(assayData=cpm)
pairs(min, smoothScatter=TRUE)
cpm<-replace(cpm, cpm==0, 0.01)
min<-ExpressionSet(assayData=cpm)
pairs(min, smoothScatter=TRUE)
tiff(file="HEKexoScatter.tiff", width=960, height= 960)
cpm<-replace(cpm, cpm==0, 0.01)
min<-ExpressionSet(assayData=cpm)
pairs(min, smoothScatter=TRUE)
dev.off()
tiff(file="HEKexoScatter.tiff", width=480, height= 480)
cpm<-replace(cpm, cpm==0, 0.01)
min<-ExpressionSet(assayData=cpm)
pairs(min, smoothScatter=TRUE)
dev.off()
#make a scatterplot
tiff(file="HEKexoScatter.tiff", width=480, height= 480)
cpm<-replace(cpm, cpm==0, 0.01)
min<-ExpressionSet(assayData=cpm)
pairs(min, smoothScatter=TRUE)
dev.off()
#make a scatterplot
tiff(file="HEKexoScatter.tiff", width=480, height= 480)
cpm<-replace(cpm, cpm==0, 0.01)
min<-ExpressionSet(assayData=cpm)
pairs(min, smoothScatter=TRUE)
dev.off()
#make a scatterplot
tiff(file="HEKexoScatter.tiff", width=480, height= 480)
cpm<-replace(cpm, cpm==0, 0.01)
min<-ExpressionSet(assayData=cpm)
pairs(min, smoothScatter=TRUE)
dev.off()
par(mar = rep(2, 4))
par(mar = rep(2, 4))
par(mfrow=c(4,2))
#make a scatterplot
tiff(file="HEKexoScatter.tiff", width=480, height= 480)
cpm<-replace(cpm, cpm==0, 0.01)
min<-ExpressionSet(assayData=cpm)
pairs(min, smoothScatter=TRUE)
dev.off()
Groups <-factor(c(rep(c("GFP", "CAV1", "CAV2","CAV3"),3)))
design <- model.matrix(~Groups)
rownames(design) <- colnames(y)
View(design)
Groups <-factor(c(rep(c("GFP","CAVEOLIN", "CAV1", "CAV2","CAV3"),3)))
design <- model.matrix(~Groups)
rownames(design) <- colnames(y)
y <- estimateGLMCommonDisp(y, design, verbose=TRUE)
# estimate genewise and tagwise dispersions
y <- estimateGLMTrendedDisp(y, design)
y <- estimateGLMTagwiseDisp(y, design)
# fit the linear model
fit <- glmFit(y, design)
View(design)
View(rawdata)
Groups <-factor(c(rep(c("PTRF","SDPR", "CAV1", "PN4","PRKCA"),3)))
design <- model.matrix(~Groups)
rownames(design) <- colnames(y)
y <- estimateGLMCommonDisp(y, design, verbose=TRUE)
# estimate genewise and tagwise dispersions
y <- estimateGLMTrendedDisp(y, design)
y <- estimateGLMTagwiseDisp(y, design)
# fit the linear model
fit <- glmFit(y, design)
y$samples$group <- c(rep(c("PTRF","SDPR", "CAV1", "PN4","PRKCA"),3))
GFP_vs_CAV1 <- exactTest(y, pair=c("PN4","PTRF"))
summary(de <- decideTestsDGE(GFP_vs_CAV1, p=0.05, adjust="BH"))
topTags(GFP_vs_CAV1, n=10)
tiff(file= "EXOhekMDS.tiff", width=480, height=480)
plotMDS(y, method="bcv")
dev.off()
rawdata <- read.csv("PC3exoRAW.csv", header= TRUE)
y <- DGEList(counts=rawdata[,2:13], genes=rawdata[,1])
keep <- rowSums(cpm(y)>10) >=2
y <- y[keep,]
y$samples$lib.size <- colSums(y$counts)
y <- calcNormFactors(y)
#make QC plots
pdf(file="DENDRpc3Exo.pdf", paper="a4r")
d <-cpm(y, normalized.lib.sizes=TRUE)
d<-t(d)
dist<-dist(d)
hc<-hclust(dist)
plot(hc)
dev.off()
cpm<- cpm(y, normalized.lib.sizes=TRUE)
rownames(cpm)<-y$genes[,1]
write.table(cpm, "cpm_miRNA_PC3exo_subset.txt", sep="\t")
tiff(file= "EXOPC3MDS.tiff", width=480, height=480)
plotMDS(y, method="bcv")
dev.off()
rawdata <- read.csv("HEKexoRAW.csv", header= TRUE)
View(rawdata)
View(rawdata)
rawdata <- read.csv("HEKexoRAW.csv", header= TRUE)
y <- DGEList(counts=rawdata[,2:16], genes=rawdata[,1])
keep <- rowSums(cpm(y)>10) >=2
y <- y[keep,]
y$samples$lib.size <- colSums(y$counts)
y <- calcNormFactors(y)
d <-cpm(y, normalized.lib.sizes=TRUE)
d<-t(d)
dist<-dist(d)
hc<-hclust(dist)
plot(hc)
dev.off()
d <-cpm(y, normalized.lib.sizes=TRUE)
d<-t(d)
dist<-dist(d)
hc<-hclust(dist)
plot(hc)
plotMDS(y, method="bcv")
cpm<-replace(cpm, cpm==0, 0.01)
min<-ExpressionSet(assayData=cpm)
pairs(min, smoothScatter=TRUE)
Groups <-factor(c(rep(c("SDPR","PTRF", "CAV1", "PN4","PRKCA"),3)))
design <- model.matrix(~Groups)
rownames(design) <- colnames(y)
y <- estimateGLMCommonDisp(y, design, verbose=TRUE)
# estimate genewise and tagwise dispersions
y <- estimateGLMTrendedDisp(y, design)
y <- estimateGLMTagwiseDisp(y, design)
# fit the linear model
fit <- glmFit(y, design)
library(lumi)
library(edgeR)
y$samples$group <- c(rep(c("PTRF","SDPR", "CAV1", "PN4","PRKCA"),3))
GFP_vs_CAV1 <- exactTest(y, pair=c("PN4","PTRF"))
# summarize results, -1 means down regulated, 1 means up regulated.
# The following results mean that there was 1 down-regulated gene, 1 up-regulated gene, and 364
# non-changing genes
summary(de <- decideTestsDGE(GFP_vs_CAV1, p=0.05, adjust="BH"))
topTags(GFP_vs_CAV1, n=10)
?topTags
write.csv(topTags(GFP_vs_CAV1, n=50), "HEKexoPN4vCav1.csv")
GFP_vs_CAV2 <- exactTest(y, pair=c("PN4","SDPR"))
# summarize results, -1 means down regulated, 1 means up regulated.
# The following results mean that there was 10 down-regulated genes, 5 up-regulated genes, and 351
# non-changing genes
summary(de <- decideTestsDGE(GFP_vs_CAV2, p=0.05, adjust="BH"))
topTags(GFP_vs_CAV2, n=10)
write.csv(topTags(GFP_vs_CAV2, n=50), "HEKexoPN4vCav2.csv")
GFP_vs_CAV3 <- exactTest(y, pair=c("PN4","PRKCA"))
# summarize results, -1 means down regulated, 1 means up regulated.
# The following results mean that there was 1 down-regulated gene, 0 up-regulated genes, and 364
# non-changing genes
summary(de <- decideTestsDGE(GFP_vs_CAV3, p=0.05, adjust="BH"))
topTags(GFP_vs_CAV3, n=10)
write.csv(topTags(GFP_vs_CAV3, n=50), "HEKexoPN4vCav3.csv")
GFP_vs_CAV3 <- exactTest(y, pair=c("PN4","CAV1"))
# summarize results, -1 means down regulated, 1 means up regulated.
# The following results mean that there was 1 down-regulated gene, 0 up-regulated genes, and 364
# non-changing genes
summary(de <- decideTestsDGE(GFP_vs_CAV3, p=0.05, adjust="BH"))
topTags(GFP_vs_CAV3, n=10)
write.csv(topTags(GFP_vs_CAV3, n=50), "HEKexoPN4vCaveolin.csv")
GFP_vs_CAV1 <- exactTest(y, pair=c("CAV1","PTRF"))
# summarize results, -1 means down regulated, 1 means up regulated.
# The following results mean that there was 1 down-regulated gene, 1 up-regulated gene, and 364
# non-changing genes
summary(de <- decideTestsDGE(GFP_vs_CAV1, p=0.05, adjust="BH"))
write.csv(topTags(GFP_vs_CAV1, n=50), "HEKexoCaveVCav1.csv")
topTags(GFP_vs_CAV1, n=10)
GFP_vs_CAV2 <- exactTest(y, pair=c("CAV1","SDPR"))
# summarize results, -1 means down regulated, 1 means up regulated.
# The following results mean that there was 10 down-regulated genes, 5 up-regulated genes, and 351
# non-changing genes
summary(de <- decideTestsDGE(GFP_vs_CAV2, p=0.05, adjust="BH"))
topTags(GFP_vs_CAV2, n=10)
write.csv(topTags(GFP_vs_CAV2, n=50), "HEKexoCaveVCav2.csv")
GFP_vs_CAV3 <- exactTest(y, pair=c("CAV1","PRKCA"))
# summarize results, -1 means down regulated, 1 means up regulated.
# The following results mean that there was 1 down-regulated gene, 0 up-regulated genes, and 364
# non-changing genes
summary(de <- decideTestsDGE(GFP_vs_CAV3, p=0.05, adjust="BH"))
topTags(GFP_vs_CAV3, n=10)
write.csv(topTags(GFP_vs_CAV3, n=50), "HEKexoCaveVCav3.csv")
rawdata <- read.csv("PC3exoRAW.csv", header= TRUE)
View(rawdata)
y <- DGEList(counts=rawdata[,2:13], genes=rawdata[,1])
# Filtering and Normalization
# compute the effective library size by using TMM normalization
keep <- rowSums(cpm(y)>10) >=2
y <- y[keep,]
y$samples$lib.size <- colSums(y$counts)
y <- calcNormFactors(y)
Groups <-factor(c(rep(c("GFP","CAV1", "CAV2", "CAV3"),3)))
design <- model.matrix(~Groups)
rownames(design) <- colnames(y)
y <- estimateGLMCommonDisp(y, design, verbose=TRUE)
# estimate genewise and tagwise dispersions
y <- estimateGLMTrendedDisp(y, design)
y <- estimateGLMTagwiseDisp(y, design)
# fit the linear model
fit <- glmFit(y, design)
y$samples$group <- c(rep(c("GFP","CAV1", "CAV2", "CAV3"),3))
GFP_vs_CAV1 <- exactTest(y, pair=c("GFP","CAV1"))
# summarize results, -1 means down regulated, 1 means up regulated.
# The following results mean that there was 1 down-regulated gene, 1 up-regulated gene, and 364
# non-changing genes
summary(de <- decideTestsDGE(GFP_vs_CAV1, p=0.05, adjust="BH"))
write.csv(topTags(GFP_vs_CAV1, n=50), "PC3exoGFPvCAV1.csv")
topTags(GFP_vs_CAV1, n=10)
GFP_vs_CAV2 <- exactTest(y, pair=c("GFP","CAV2"))
# summarize results, -1 means down regulated, 1 means up regulated.
# The following results mean that there was 10 down-regulated genes, 5 up-regulated genes, and 351
# non-changing genes
summary(de <- decideTestsDGE(GFP_vs_CAV2, p=0.05, adjust="BH"))
topTags(GFP_vs_CAV2, n=10)
write.csv(topTags(GFP_vs_CAV2, n=50), "PC3exoGFPvCAV2.csv")
GFP_vs_CAV3 <- exactTest(y, pair=c("GFP","CAV3"))
# summarize results, -1 means down regulated, 1 means up regulated.
# The following results mean that there was 1 down-regulated gene, 0 up-regulated genes, and 364
# non-changing genes
summary(de <- decideTestsDGE(GFP_vs_CAV3, p=0.05, adjust="BH"))
topTags(GFP_vs_CAV3, n=10)
write.csv(topTags(GFP_vs_CAV3, n=50), "PC3exoGFPVCav3.csv")
rawdatahek<- read.csv("HEKexoRAW.csv", header=TRUE)
View(rawdata)
View(rawdatahek)
View(rawdata)
comb<- c(rawdata, rawdatahek)
comb<- cbind(rawdata, rawdatahek)
y <- DGEList(counts=comb[,2:29], genes=rawdata[,1])
comb<- cbind(rawdata, rawdatahek[, 2:16])
y <- DGEList(counts=comb[,2:28], genes=rawdata[,1])
keep <- rowSums(cpm(y)>10) >=2
y <- y[keep,]
y$samples$lib.size <- colSums(y$counts)
y <- calcNormFactors(y)
d <-cpm(y, normalized.lib.sizes=TRUE)
d<-t(d)
dist<-dist(d)
hc<-hclust(dist)
plot(hc)
pdf(file="DendroHEKandPC.pdf", paper="a4r")
d <-cpm(y, normalized.lib.sizes=TRUE)
d<-t(d)
dist<-dist(d)
hc<-hclust(dist)
plot(hc)
dev.off()
cpm<- cpm(y, normalized.lib.sizes=TRUE)
rownames(cpm)<-y$genes[,1]
tiff(file= "EXOPC3HEKcombMDS.tiff", width=480, height=480)
plotMDS(y, method="bcv")
dev.off()
plotMDS(y, method="bcv")
legend("topright", legend = c("PC3", "HEK"), col = 1:2, pch = 15)
plotMDS(y, method="bcv", col=c(rep(1,15), rep(2, 15), rep(1, 12), rep(2, 12)))
legend("topright", legend = c("Exosome", "Pellet"), col = 1:2, pch = 15)
plotMDS(y, method="bcv", col=c(rep(1,12), rep(2, 12), rep(1, 15), rep(2, 15)))
legend("topright", legend = c("Exosome", "Pellet"), col = 1:2, pch = 15)
cpm<- cpm(y, normalized.lib.sizes=TRUE)
rownames(cpm)<-y$genes[,1]
plotMDS(y, method="bcv", col=c(rep(1,12), rep(2, 12), rep(1, 15), rep(2, 15)))
legend("topright", legend = c("Exosome", "Pellet"), col = 1:2, pch = 15)
plotMDS(y, method="bcv", col=c(rep(1,30), rep(2,24)))
legend("topright", legend = c("HEK", "PC3"), col = 1:2, pch = 15)
plotMDS(y, method="bcv", col=c(rep(1,24), rep(2,30)))
legend("topright", legend = c("HEK", "PC3"), col = 1:2, pch = 15)
plotMDS(y, method="bcv", col=c(rep(1,30), rep(2,30)))
plotMDS(y, method="bcv")
tiff(file="HEKPCexoScatter.tiff", width=480, height= 480)
cpm<-replace(cpm, cpm==0, 0.01)
min<-ExpressionSet(assayData=cpm)
pairs(min, smoothScatter=TRUE)
dev.off()
View(comb)
Groups <-factor(c(rep(c(c("GFP","CAV1", "CAV2", "CAV3"),3), c("SDPR","PTRF","CAV","PN","PRKCA"),3)))
Groups
design <- model.matrix(~Groups)
View(design)
Groups <-factor(c(rep(c("GFP","CAV1", "CAV2", "CAV3"),3)), (rep(c("SDPR", "PTRF", "CAV", "PN", "PRKCA"),3)))
Groups <-factor(c(rep(c("GFP","CAV1", "CAV2", "CAV3"),3)), (rep(c("SDPR", "PTRF", "CAV", "PN", "PRKCA"),3)))
groups
Groups
design <- model.matrix(~Groups)
View(design)
Groups <-factor(c(rep(c("GFP","CAV1", "CAV2", "CAV3", "SDPR", "PTRF", "CAV", "PN", "PRKCA"),3)))
design <- model.matrix(~Groups)
View(design)
rownames(design) <- colnames(y)
View(rawdata)
rawdata<- read.csv(file="miRNA_analysis_kerry.csv", header= TRUE, row.names=1)
rawdata<- read.csv(file="miRNA_analysis_kerry.csv", header= TRUE, row.names=1)
View(rawdata)
View(rawdata)
Cav1PN4= rawdata[c(1:3, 5, 6, 7)]
View(Cav1PN4)
y <- DGEList(counts=Cav1PN4[,1:6], genes=rownames(rawdata))
keep <- rowSums(cpm(y)>10) >=2
y <- y[keep,]
y$samples$lib.size <- colSums(y$counts)
y <- calcNormFactors(y)
Groups <-factor(c(rep(c(Cav1, Cav1, Cav1, GFP, GFP, GFP),3)))
design <- model.matrix(~Groups)
rownames(design) <- colnames(y)
d <-cpm(y, normalized.lib.sizes=TRUE)
d<-t(d)
dist<-dist(d)
hc<-hclust(dist)
plot(hc)
Groups <-factor(c(rep(c(Cav1, Cav1, Cav1, GFP, GFP, GFP),3)))
design <- model.matrix(~Groups)
rownames(design) <- colnames(y)
Groups <-factor(c(rep(c("Cav1", "Cav1", "Cav1", "GFP", "GFP", "GFP"),3)))
design <- model.matrix(~Groups)
rownames(design) <- colnames(y)
View(design)
y$samples$lib.size <- colSums(y$counts)
Groups <-factor(c(rep(c("Cav1", "Cav1", "Cav1", "GFP", "GFP", "GFP"),1)))
design <- model.matrix(~Groups)
rownames(design) <- colnames(y)
View(design)
y <- estimateGLMCommonDisp(y, design, verbose=TRUE)
# estimate genewise and tagwise dispersions
y <- estimateGLMTrendedDisp(y, design)
y <- estimateGLMTagwiseDisp(y, design)
# fit the linear model
fit <- glmFit(y, design)
y$samples$group <- c(rep(c("GFP","CAV1", "CAV2", "CAV3"),3))
y$samples$group <- c(rep(c("Cav1", "Cav1", "Cav1", "GFP", "GFP", "GFP"),1))
GFP_vs_CAV1 <- exactTest(y, pair=c("GFP","CAV1"))
Groups <-factor(c(rep(c("Cav1", "GFP"),3)))
design <- model.matrix(~Groups)
rownames(design) <- colnames(y)
View(design)
y <- estimateGLMCommonDisp(y, design, verbose=TRUE)
# estimate genewise and tagwise dispersions
y <- estimateGLMTrendedDisp(y, design)
y <- estimateGLMTagwiseDisp(y, design)
# fit the linear model
fit <- glmFit(y, design)
y$samples$group <- c(rep(c("Cav1", "GFP"),3))
GFP_vs_CAV1 <- exactTest(y, pair=c("GFP","CAV1"))
Groups <-factor(c(rep(c("GFP", "CAV1"),3)))
design <- model.matrix(~Groups)
rownames(design) <- colnames(y)
View(design)
Groups <-factor(c(rep(c("GFP", "CAV1"),3)))
design <- model.matrix(~Groups)
View(design)
Groups <-factor(c(rep(c("GFP", "CAV1", "CAV2","CAV3"),3)))
design <- model.matrix(~Groups)
View(design)
Groups <-factor(c(rep(c("GFP", "CAV1"),3)))
design <- model.matrix(~Groups)
rownames(design) <- colnames(y)
View(design)
View(design)
design <- model.matrix(~Groups)
Groups <-factor(c(rep(c("GFP", "CAV1"),3)))
design <- model.matrix(~Groups)
rownames(design) <- colnames(y)
y <- DGEList(counts=Cav1PN4[,1:6], genes=rownames(rawdata))
# Filtering and Normalization
# compute the effective library size by using TMM normalization
keep <- rowSums(cpm(y)>10) >=2
y <- y[keep,]
y$samples$lib.size <- colSums(y$counts)
y <- calcNormFactors(y)
Groups <-factor(c(rep(c("GFP", "CAV1"),3)))
design <- model.matrix(~Groups)
rownames(design) <- colnames(y)
View(design)
y <- estimateGLMCommonDisp(y, design, verbose=TRUE)
# estimate genewise and tagwise dispersions
y <- estimateGLMTrendedDisp(y, design)
y <- estimateGLMTagwiseDisp(y, design)
# fit the linear model
fit <- glmFit(y, design)
y$samples$group <- c(rep(c("Cav1", "GFP"),3))
GFP_vs_CAV1 <- exactTest(y, pair=c("GFP","CAV1"))
Groups <-factor(c(rep(c("GFP", "CAV1", "Cav2"),3)))
design <- model.matrix(~Groups)
rownames(design) <- colnames(y)
y <- DGEList(counts=Cav1PN4[,1:6], genes=rownames(rawdata))
# Filtering and Normalization
# compute the effective library size by using TMM normalization
keep <- rowSums(cpm(y)>10) >=2
y <- y[keep,]
y$samples$lib.size <- colSums(y$counts)
y <- calcNormFactors(y)
#make QC plots
d <-cpm(y, normalized.lib.sizes=TRUE)
d<-t(d)
dist<-dist(d)
hc<-hclust(dist)
plot(hc)
Groups <-factor(c(rep(c("GFP", "CAV1", "Cav2"),3)))
design <- model.matrix(~Groups)
rownames(design) <- colnames(y)
Groups <-factor(c(rep(c("GFP", "CAV1"),3)))
design <- model.matrix(~Groups)
View(design)
Groups <-factor(c(rep(c("GFP","CAV1", "CAV2", "CAV3", "SDPR", "PTRF", "CAV", "PN", "PRKCA"),3)))
design <- model.matrix(~Groups)
View(design)
Groups <-factor(c(rep(c("GFP", "Cav1"),3)))
design <- model.matrix(~Groups)
View(design)
Groups <-factor(c(rep(c("GFP", "CAV1", "CAV2","CAV3"),3)))
design <- model.matrix(~Groups)
rownames(design) <- colnames(y)
Groups <-factor(c(rep(c("GFP", "CAV1", "CAV2","CAV3"),3)))
design <- model.matrix(~Groups)
View(design)
y <- DGEList(counts=Cav1PN4[,1:6], genes=rownames(rawdata))
View(rawdata)
rawdata<- read.delim("miRNA_raw_counts_CORRECT_NAMES.txt", header= TRUE, row.names= 1)
colSums(rawdata)
ColSums<-colSums(rawdata)
head(ColSums)
write.csv(ColSums, "ColumnSumsofrawdata.csv")
rawdata<- read.csv(file="miRNA_analysis_kerry.csv", header= TRUE, row.names=1)
ColSums<-colSums(rawdata)
ColSums
